// Copyright (c) 1994-2009 Georgia Tech Research Corporation, Atlanta, GA
// This file is part of FalconView(tm).

// FalconView(tm) is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// FalconView(tm) is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.

// You should have received a copy of the GNU Lesser General Public License
// along with FalconView(tm).  If not, see <http://www.gnu.org/licenses/>.

// FalconView(tm) is a trademark of Georgia Tech Research Corporation.

// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "browseforfolder.h"

/////////////////////////////////////////////////////////////////////////////
// CBrowseForFolder

IMPLEMENT_DYNCREATE(CBrowseForFolder, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CBrowseForFolder properties

CString CBrowseForFolder::GetTargetDir()
{
	CString result;
	GetProperty(0x2, VT_BSTR, (void*)&result);
	return result;
}

void CBrowseForFolder::SetTargetDir(LPCTSTR propVal)
{
	SetProperty(0x2, VT_BSTR, propVal);
}

CString CBrowseForFolder::GetRootDir()
{
	CString result;
	GetProperty(0x3, VT_BSTR, (void*)&result);
	return result;
}

void CBrowseForFolder::SetRootDir(LPCTSTR propVal)
{
	SetProperty(0x3, VT_BSTR, propVal);
}

LPDISPATCH CBrowseForFolder::GetCrntShellFolder()
{
	LPDISPATCH result;
	GetProperty(0x4, VT_DISPATCH, (void*)&result);
	return result;
}

void CBrowseForFolder::SetCrntShellFolder(LPDISPATCH propVal)
{
	SetProperty(0x4, VT_DISPATCH, propVal);
}

CString CBrowseForFolder::GetRootDisplayName()
{
	CString result;
	GetProperty(0x6, VT_BSTR, (void*)&result);
	return result;
}

void CBrowseForFolder::SetRootDisplayName(LPCTSTR propVal)
{
	SetProperty(0x6, VT_BSTR, propVal);
}

/////////////////////////////////////////////////////////////////////////////
// CBrowseForFolder operations

SCODE CBrowseForFolder::FillTree()
{
	SCODE result;
	InvokeHelper(0x5, DISPATCH_METHOD, VT_ERROR, (void*)&result, NULL);
	return result;
}

void CBrowseForFolder::AboutBox()
{
	InvokeHelper(0xfffffdd8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}
