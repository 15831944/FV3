// Copyright (c) 1994-2009 Georgia Tech Research Corporation, Atlanta, GA
// This file is part of FalconView(tm).

// FalconView(tm) is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// FalconView(tm) is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.

// You should have received a copy of the GNU Lesser General Public License
// along with FalconView(tm).  If not, see <http://www.gnu.org/licenses/>.

// FalconView(tm) is a trademark of Georgia Tech Research Corporation.

// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CBrowseForFolder wrapper class
#pragma once

class CBrowseForFolder : public CWnd
{
protected:
	DECLARE_DYNCREATE(CBrowseForFolder)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0xcc04ade5, 0xfa0, 0x4d2e, { 0xa7, 0x7b, 0x1f, 0x89, 0xc4, 0x8a, 0x76, 0x8c } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:
	// property 'ClientEdge' not emitted because of invalid type
	CString GetTargetDir();
	void SetTargetDir(LPCTSTR);
	CString GetRootDir();
	void SetRootDir(LPCTSTR);
	LPDISPATCH GetCrntShellFolder();
	void SetCrntShellFolder(LPDISPATCH);
	CString GetRootDisplayName();
	void SetRootDisplayName(LPCTSTR);

// Operations
public:
	SCODE FillTree();
	void AboutBox();
};
